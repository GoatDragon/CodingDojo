*problem 1*
	5

*problem 2*
	[2, 2, 5]
	[2, 2, 5]
	[6, 8, 5]
	[6, 8, 5]

*problem 3*
	[2,2,5]

*problem4*
	true

*problem 5*
	["Coding", "Coding", "Coding", "Coding"]

*problem 6*
	[5, "Coding", "Dojo", 4]

*problem 7*
	10

*problem 8*
	As written this function does nothing. But if you give it an array of numbers, it iterates through that array, summing up the total value and printing the current total with each loop. It returns the funal sum.

__Part 2__

*problem 1*

function printAverage(x){
   sum = 0;
   for(var i=0;i<x.length;i++){
     sum+=x[i]
   }
  return sum/x.length
}
y = printAverage([1,2,3]);
console.log(y); // should log 2
  
y = printAverage([2,5,8]);
console.log(y); // should log 5

*problem 2*

var oddArray=[]
function returnOddArray(){
   for(i=1;i<256;i+=2){
     oddArray.push(i)
   }
  return oddArray
}
y = returnOddArray();
console.log(y); // should log [1,3,5,...,253,255]

*problem 3*

function squareValue(x){
   for (var i=0;i<x.length;i++){
     x[i]=x[i]**2
   }
   return x;
}
y = squareValue([1,2,3]);
console.log(y); // should log [1,4,9]
  
y = squareValue([2,5,8]);
console.log(y); // should log [4,25,64]